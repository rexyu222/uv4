
(function() {
    // Dynamic values from page request
    
var script = document.getElementById("celtra-script-1");
if (!script || script.tagName.toLowerCase() !== 'script')
    throw 'Element with id equal to scriptId does not exist or is not a script.';
  
    var runtimeParams = {"tagVersion":"html-standard-7","deviceInfo":{"deviceType":"Desktop","primaryHardwareType":"Desktop","mobileDevice":false,"osName":"Windows","osVersion":"NT 10.0","platform":"DesktopPlatform","platformVersion":null,"browserName":"Edge","browserVersion":"84.0.522.40","browserRenderingEngine":"Blink","vendor":"Microsoft","model":"Edge - Windows"},"weather":{"windy":null,"currentCondition":null,"apparentTemperature":28.0,"temperature":27.2,"windSpeed":null,"cloudCoverage":null,"conditions":null},"ipCountryCode":"CA","ipRegionCode":null,"ipPrincipalSubdivisionCode":"ON","ipCityGeonameId":"6167865","ipCity":"Toronto","ipPostalCode":"M6G","ipLat":43.6644,"ipLng":-79.4195,"accountId":"e9560de6","folderId":"72feabeb","placementId":"597c8853","supplierId":null,"sessionId":"s1595168605x7204f6180a5e09x49798640","purpose":"live","secure":1,"clientTimestamp":"1595168432.921","clientTimeZoneOffsetInMinutes":240,"clientIp":"99.227.20.54","gpsLat":null,"gpsLng":null,"language":"en","acceptLanguage":"en-US,en;q=0.9","platformAdvId":null,"platformAdvIdTrackingLimited":null,"userIdentifiers":{},"variantChoices":{"EventMetadata":"newMeta"},"neustarSegment":null,"authBasis":"1595168605581,62888068,597c8853","authToken":"46e2fbe100237d8050d3fa40e9e66f9a","customAudiences":{},"derivedAudiences":{},"destinationDefinitions":[],"dynamicContent":[],"tuneIosQueryStringFragment":null,"tuneAndroidQueryStringFragment":null,"tuneCustomAttributes":{},"moatCustomAttributes":{},"admarvel_format":null,"overrides":{"placementId":"597c8853","customAudiences":{},"derivedAudiences":{},"deviceInfo":{"deviceType":"Desktop","primaryHardwareType":"Desktop","mobileDevice":false,"osName":"Windows","osVersion":"NT 10.0","platform":"DesktopPlatform","platformVersion":null,"browserName":"Edge","browserVersion":"84.0.522.40","browserRenderingEngine":"Blink","vendor":"Microsoft","model":"Edge - Windows"},"language":"en","ipCountryCode":"CA","ipRegionCode":null,"ipPrincipalSubdivisionCode":"ON","ipCityGeonameId":"6167865","ipCity":"Toronto","weather":{"windy":null,"currentCondition":null,"apparentTemperature":28.0,"temperature":27.2,"windSpeed":null,"cloudCoverage":null,"conditions":null},"clientTimestamp":"1595168432.921","clientTimeZoneOffsetInMinutes":240},"utSignals":null,"_mraidCheck":null,"fallbackSdk":null,"passthroughParameters":{},"externalAdServer":"DFPPremium","externalCreativeId":"138314088575","externalCreativeName":null,"externalPlacementId":"60389418","externalPlacementName":null,"externalSiteId":"60389418","externalSiteName":"","externalSupplierId":null,"externalSupplierName":null,"externalLineItemId":"5389558531","externalSessionId":null,"externalBundleId":null,"externalCreativeWidth":null,"externalCreativeHeight":null,"externalCampaignId":"2703653919","externalCampaignName":null,"externalAdvertiserId":"28318098","externalDestinationUrl":null,"clickUrl":"https://adclick.g.doubleclick.net/pcs/click?xai=AKAOjsuZGCDz8YvwZLV3PfnPYl6TWkywX3R58mqPPaLQGxsOsJKUZCJt-IPuoFMA9onUiuAZBbliWldclR2VrNCOLO47DfYwiWDXEKy6a3Rb2_r5VJZEtZGp9Qc1vu5FxEHXwYKoCfw90VUlfOKcq4euhTq61pXRda4XUM9nBGnZNSEzL1BFnGoYKc0b4gQRMgcelD7eIHFsTKoctRhQ6YSjnhg5viM-ilInNQx8YObuS12vXd91P-cB3onRIaZPL3ekmbNv&sig=Cg0ArKJSzFQx8yi7HHzBEAE&urlfix=1&adurl=","useClickAsDestination":null,"scriptId":"celtra-script-1","dest.urlOpened":{"Exit - BG clicked":"https://ad.doubleclick.net/ddm/trackclk/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=","Exit - CTA clicked":"https://ad.doubleclick.net/ddm/trackclk/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua="},"firehoseUrl":null,"track.adLoading":"https://ad.doubleclick.net/ddm/trackimp/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;ord=[timestamp];dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=?","clickEvent":"advertiser","clickUrlNeedsDest":null,"ncu":null,"firstPage":1,"dataURIsEnabled":0,"universalAndAppLinksInMRAID":0,"monotypeProjectId":"c46ed090-3671-4163-a85b-b06b4038ae38","iosAdvId":null,"iosAdvIdTrackingLimited":null,"androidAdvId":null,"androidAdvIdTrackingLimited":null,"moatRandom":{"first":1119624346,"second":1009204762},"skipOffset":null,"_enablePoliteLoading":null,"massProductionPreview":null,"fontSubsetterIsDisabled":null,"_politeImageUrl":null,"_politeClickThrough":null,"sticky":null,"_mopubExt":null,"enabledServices":["googleMaps","contentSharing"],"creativeVariantLockSize":null,"screenIdLock":null,"vastVersion":null,"standalonePreview":null,"campaignExplorer":null,"exportingFirstFrame":null,"exportingFrameRate":null,"exportingVideoAssetBlobHash":null,"country":"CA","productCategoryCode":null,"campaignName":"BBC CAN | World Vision | May 2020","agencyId":null,"customPartnerAttributeBrandId":null,"suppressCloseButton":null,"expandDirection":"undefined","hostPageLoadId":"8161162893342377"};
    runtimeParams.overridableClickThroughDestinationUrl = false;
    runtimeParams.redirectJsClientTimestamp = new Date() / 1000;
    
    
var macros = function (x) {
    if (x instanceof Array) {
        return x.map(macros);
    } else {
        var macroTags = [
            ['%%CACHEBUSTER%%', (Math.random()+'').slice(2)]
,['%ecid!', "138314088575"]
,['%n', (Math.random()+'').slice(2)]
,['%s', "https"]
,['{celtraAccountId}', "e9560de6"]
,['{celtraAgencyId}', ""]
,['{celtraAndroidAdvIdTrackingLimitedBoolStr}', ""]
,['{celtraAndroidAdvIdTrackingLimited}', ""]
,['{celtraAndroidAdvId}', ""]
,['{celtraCampaignId:int}', "1929292779"]
,['{celtraCampaignId}', "72feabeb"]
,['{celtraCampaignName}', "BBC%20CAN%20%7C%20World%20Vision%20%7C%20May%202020"]
,['{celtraCountryCode}', "CA"]
,['{celtraCreativeId:int}', "1653112936"]
,['{celtraCreativeId}', "62888068"]
,['{celtraCreativeVariant:urlenc}', ""]
,['{celtraCreativeVariant}', ""]
,['{celtraCustomPartnerAttribute\\[code\\]}', ""]
,['{celtraExternalAdServer}', "DFPPremium"]
,['{celtraExternalAdvertiserId}', "28318098"]
,['{celtraExternalBundleId}', ""]
,['{celtraExternalCampaignId}', "2703653919"]
,['{celtraExternalCampaignName}', ""]
,['{celtraExternalCreativeId}', "138314088575"]
,['{celtraExternalCreativeName}', ""]
,['{celtraExternalDestinationUrl}', ""]
,['{celtraExternalLineItemId}', "5389558531"]
,['{celtraExternalPlacementId}', "60389418"]
,['{celtraExternalPlacementName}', ""]
,['{celtraExternalSessionId}', ""]
,['{celtraExternalSiteId}', "60389418"]
,['{celtraExternalSiteName}', ""]
,['{celtraExternalSupplierId}', ""]
,['{celtraExternalSupplierName}', ""]
,['{celtraFeedReportLabel}', ""]
,['{celtraIosAdvIdTrackingLimitedBoolStr}', ""]
,['{celtraIosAdvIdTrackingLimited}', ""]
,['{celtraIosAdvId}', ""]
,['{celtraPlacementId:int}', "1501333587"]
,['{celtraPlacementId}', "597c8853"]
,['{celtraPlatformAdvIdTrackingLimited}', ""]
,['{celtraPlatformAdvId}', ""]
,['{celtraProductCategoryCode}', ""]
,['{celtraProto}', "https"]
,['{celtraRandom}', (Math.random()+'').slice(2)]
,['{celtraSessionId}', "s1595168605x7204f6180a5e09x49798640"]
,['{celtraSupplierId:int}', ""]
,['{celtraSupplierId}', ""]

        ];
        return macroTags.reduce(function(str, replacementRule, idx, arr) {
            return str.replace(new RegExp(replacementRule[0], 'ig'), replacementRule[1] ? replacementRule[1] : '');
        }, x);
    }
};

    // Dynamic values that we do not want to pass forward in urls,
    // so we look them up on every page request based on runtimeParams
    var urlOpenedOverrideUrls = {"Exit - BG clicked":"https://ad.doubleclick.net/ddm/trackclk/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=","Exit - CTA clicked":"https://ad.doubleclick.net/ddm/trackclk/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua="};
    var storeOpenedOverrideUrls = {};
    var urlOpenedUrlAppendage = "";
    var clickThroughDestinationUrl = null;

    // Less dynamic values for payload request
    var payloadBase = "https://cache-ssl.celtra.com/api/creatives/62888068/compiled/web.js";
    var cacheParams = {"v": "36-07b6050d20", "secure": 1, "cachedVariantChoices": "W10-", "eventMetadataExperiment": 'newMeta', "inmobi": typeof imraid !== 'undefined' && typeof _im_imai !== 'undefined' ? '1' : '0', "adx-in-banner-video": '1'};

    
    var trackers = (function() {
    return [
        // 3rd-party tracker (regular)
function(event) {
    if (event.name == 'adLoading')
        return {urls: macros(["https://ad.doubleclick.net/ddm/trackimp/N7337.281370BBCCANADA/B24240188.274594654;dc_trk_aid=469493385;dc_trk_cid=133056080;ord=[timestamp];dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=?"])};

    if (event.name == 'firstInteraction')
        return {urls: macros([])};

    if (event.name == 'creativeLoaded')
        return {urls: macros([])};

    if (event.name == 'creativeRendered')
        return {urls: macros([])};

    if (event.name == 'viewable00')
        return {urls: macros([])};

    if (event.name == 'viewable501')
        return {urls: macros([])};

    if (event.name == 'expandRequested')
        return {urls: macros([])};

    if (event.name == 'videoPlayInitiated')
        return {urls: macros([])};

    if (event.clazz === "MasterVideo") {
        if (event.name == 'videoStart')
            return {urls: macros([])};

        if (event.name == 'videoFirstQuartile')
            return {urls: macros([])};

        if (event.name == 'videoMidpoint')
            return {urls: macros([])};

        if (event.name == 'videoThirdQuartile')
            return {urls: macros([])};

        if (event.name == 'videoComplete')
            return {urls: macros([])};
    }

    if (event.name == 'videoPause')
        return {urls: macros([])};

    if (event.name == 'videoMuted')
        return {urls: macros([])};

    if (event.name == 'videoUnmuted')
        return {urls: macros([])};

    if (event.name == 'custom')
        return {urls: macros({}[event.label] || [])};

    if (event.name == 'urlOpened')
        return {urls: macros({}[event.label] || [])};

    if (event.name == 'storeOpened')
        return {urls: macros({}[event.label] || [])};
},
// 3rd-party tracker (click regular)
function(event) {
    if (event.name === "firstInteraction")
        return {urls: macros([]), events: [{name: 'click'}] };
},
// Ad server tracker
function(event) {
    if (event.name === "firstInteraction")
        return {urls: macros(["https://adclick.g.doubleclick.net/pcs/click?xai=AKAOjsuZGCDz8YvwZLV3PfnPYl6TWkywX3R58mqPPaLQGxsOsJKUZCJt-IPuoFMA9onUiuAZBbliWldclR2VrNCOLO47DfYwiWDXEKy6a3Rb2_r5VJZEtZGp9Qc1vu5FxEHXwYKoCfw90VUlfOKcq4euhTq61pXRda4XUM9nBGnZNSEzL1BFnGoYKc0b4gQRMgcelD7eIHFsTKoctRhQ6YSjnhg5viM-ilInNQx8YObuS12vXd91P-cB3onRIaZPL3ekmbNv&sig=Cg0ArKJSzFQx8yi7HHzBEAE&urlfix=1&adurl="]), events: [{name: 'clickReportedToSupplier'}] };
}
    ]
})();
    trackers.urlsAndEventsFor = function(event) {
        return this.reduce(function(acc, tracker) {
            var ue = tracker(event) || {};
            return {
                urls:   acc.urls.concat(ue.urls || []),
                events: acc.events.concat(ue.events || [])
            };
        }, {urls: [], events: []});
    };
       

    
var adLoadingEvent = {"name":"adLoading","sessionId":"s1595168605x7204f6180a5e09x49798640"};
adLoadingEvent.clientTimestamp = new Date/1000;

trackers.urlsAndEventsFor(adLoadingEvent).urls.forEach(function(url) {
    // On IE 8+ URLs containing '%' character sometimes throw an error and
    // stop current JS run loop. One solution  would be to look for that
    // and replace it with '%25', but we've decided not to modify incoming
    // URLs, because this issue is really a combination of two external
    // problems: broken URL on a buggy browser.
    // https://celtra.atlassian.net/browse/MAB-4476
    try {
        var img = new Image;
        
        img.src = url;
    } catch(e) {}
});
    

    
(function () {
    runtimeParams.protoLoading = {};

    var base64img = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4wEKCBsN103sxwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAC0lEQVQI12NgAAIAAAUAAeImBZsAAAAASUVORK5CYII=";

    runtimeParams.protoLoading.dataLoadStatus = null;
    // Test if CSP is blocking "data:" source for images
    var dataImg = new Image();
    dataImg.onload = function() {
        runtimeParams.protoLoading.dataLoadStatus = "supported";
    };
    dataImg.onerror = function(e) {
        runtimeParams.protoLoading.dataLoadStatus = "blocked";
    };
    dataImg.src = "data:image/png;base64," + base64img;

    runtimeParams.protoLoading.blobLoadStatus = null;
    // Test if CSP is blocking "blob:" source for images
    var url = null;
    try {
        var binaryImg = atob(base64img);
        var length = binaryImg.length;
        var ab = new ArrayBuffer(length);
        var ua = new Uint8Array(ab);
        for (var i = 0; i < length; i++) {
            ua[i] = binaryImg.charCodeAt(i);
        }
        var blob = new Blob([ab], {type: 'image/png'});
        url = URL.createObjectURL(blob);
    } catch(error) {
        runtimeParams.protoLoading.blobLoadStatus = "error";
        runtimeParams.protoLoading.blobErrorMessage = error.name + ': ' + error.message;
        return;
    }
    var blobImg = new Image();
    blobImg.onload = function() {
        runtimeParams.protoLoading.blobLoadStatus = "supported";
        URL.revokeObjectURL(url);
    };
    blobImg.onerror = function(e) {
        runtimeParams.protoLoading.blobLoadStatus = "blocked";
    };
    blobImg.src = url;
})();
    

    function buildPayloadUrl(payloadBase) {
      var pairs = [];
      for (var k in cacheParams)
          pairs.push(encodeURIComponent(k) + '=' + encodeURIComponent(cacheParams[k]));
      return payloadBase + '?' + pairs.join('&');
    }

    var payloadUrl = buildPayloadUrl(payloadBase);

    
// Request and run payload
var payload = document.createElement('script');
payload.src = payloadUrl;
payload.onload = function() {

runtimeParams.payloadJsClientTimestamp = new Date() / 1000;
window.celtraDeviceInfoRuntimeParams = runtimeParams.deviceInfo;
window.celtra.payloads[payloadUrl](script, runtimeParams, trackers, urlOpenedOverrideUrls, storeOpenedOverrideUrls, macros, urlOpenedUrlAppendage, clickThroughDestinationUrl);
    
};
script.parentNode.insertBefore(payload, script.nextSibling);
    
    
    
    
})();
  